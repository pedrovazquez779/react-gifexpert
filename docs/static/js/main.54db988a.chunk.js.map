{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAgB9C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,GAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OAE1CN,EAAc,KAId,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACrC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAatC,OAPAC,qBAAU,WACNxB,EAAQC,GAAUwB,MAAK,SAAAC,GAAI,OAAIH,EAAS,CACpCf,KAAMkB,EACNL,SAAS,SAEd,CAACpB,IAEGqB,EDVwBK,CAAa1B,GAAhCa,EAFyB,EAE9BN,KAAaa,EAFiB,EAEjBA,QAEpB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAEjDoB,GAAW,4CAEb,qBAAKJ,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAACC,GAAD,OACP,aADkB,CACjB,EAAD,eAEQA,GADCA,EAAIC,aEdxBgB,EAAe,WAAO,IAAD,EAEMzC,mBAAS,CAAC,cAFhB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAI9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCXjC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.54db988a.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(inputValue.trim().length > 2) {\n            setCategories(cats => [inputValue, ...cats]);\n        }\n        setInputValue('');\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n            {/* <h2>Add category</h2> */}\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","export const getGifs = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=FWALA38TIzsNwpiJSTCPk3XesGCjMZDn`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url,\n        }\n    })\n\n    return gifs\n}","import React from 'react'\n\nexport const GifGridItem = ( {id, title, url} ) => {\n    return (\n        <div className='card animate__animated animate__fadeIn'>\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n    const {data:images, loading} = useFetchGifs(category);\n    \n    return (\n        <>\n            <h3 className='animate__animated animate__fadeIn'>{category}</h3>\n\n            { loading && <p>Cargando...</p>}\n\n            <div className='card-grid'>\n                {\n                    images.map((img) => ( // estos parentesis estan haciendo un return implicito\n                        <GifGridItem\n                            key={img.id}\n                            {...img} // pasa todas las propiedades del objeto al componente\n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\"\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true,\n    })\n\n    useEffect(() => {\n        getGifs(category).then(imgs => setState({\n            data: imgs,\n            loading: false,\n        }))\n    }, [category])\n\n    return state;\n}","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One Punch'])\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr />\n\n            <ol>\n                {\n                    categories.map(category => (\n                        <GifGrid\n                            key={category}\n                            category={category}\n                        />\n                    ))\n                }\n            </ol>\n        </>\n    )\n\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}